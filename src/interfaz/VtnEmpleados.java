/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaz;

import cjb.ci.CtrlInterfaz;
import dao.EmpleadoDAO;
import dao.ExportarCSV;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import modelo.Empleado;

/**
 *
 * @author chemo
 */
public class VtnEmpleados extends javax.swing.JInternalFrame
{

    /**
     * Creates new form VtnEmpleados
     */
    public VtnEmpleados()
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        buscar.getDocument().addDocumentListener(new javax.swing.event.DocumentListener()
        {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e)
            {
                filtrarEmpleados();
            }
        });
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEmpleado = new javax.swing.JTable();
        buscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        alta = new javax.swing.JButton();
        modifcar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nombreJT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        correoJT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        apellidoJT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        contrasenaJT = new javax.swing.JPasswordField();
        mostrarCheckBox = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        sueldoJT = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        setMinimumSize(new java.awt.Dimension(46, 3));
        setPreferredSize(new java.awt.Dimension(1150, 520));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tablaEmpleado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tablaEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "NOMBRE", "APELLIDO", "CORREO", "SUELDO"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tablaEmpleado.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tablaEmpleadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaEmpleado);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 750, 390));

        buscar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        buscar.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                buscarMouseClicked(evt);
            }
        });
        buscar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 480, -1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/busqueda-de-lupa.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel1.setText("EMPLEADOS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bote-de-basura.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                jLabel6MouseEntered(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, 40));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setText("INFORMACION");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 30, -1, -1));

        alta.setBackground(new java.awt.Color(102, 255, 102));
        alta.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        alta.setForeground(new java.awt.Color(255, 255, 255));
        alta.setText("ALTA");
        alta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        alta.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                altaActionPerformed(evt);
            }
        });
        getContentPane().add(alta, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, 110, 30));

        modifcar.setBackground(new java.awt.Color(153, 153, 255));
        modifcar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        modifcar.setForeground(new java.awt.Color(255, 255, 255));
        modifcar.setText("MODIFICAR");
        modifcar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modifcar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modifcarActionPerformed(evt);
            }
        });
        getContentPane().add(modifcar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 460, 110, 30));

        limpiar.setBackground(new java.awt.Color(255, 51, 51));
        limpiar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        limpiar.setForeground(new java.awt.Color(255, 255, 255));
        limpiar.setText("LIMPIAR");
        limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 460, 110, 30));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Nombre: ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, -1, -1));

        nombreJT.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        getContentPane().add(nombreJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 90, 360, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel5.setText("Sueldo:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 360, -1, -1));

        correoJT.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        correoJT.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                correoJTActionPerformed(evt);
            }
        });
        getContentPane().add(correoJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 230, 360, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setText("Apellido:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 130, -1, -1));

        apellidoJT.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        apellidoJT.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                apellidoJTActionPerformed(evt);
            }
        });
        getContentPane().add(apellidoJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 160, 360, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setText("Correo:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, -1, -1));

        contrasenaJT.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        getContentPane().add(contrasenaJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 300, 360, -1));

        mostrarCheckBox.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        mostrarCheckBox.setText("Mostrar Contraseña");
        mostrarCheckBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mostrarCheckBoxActionPerformed(evt);
            }
        });
        getContentPane().add(mostrarCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 330, -1, -1));

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("EXPORTAR DATOS");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 150, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel9.setText("Contraseña:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 270, -1, -1));

        sueldoJT.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        getContentPane().add(sueldoJT, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 390, 360, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaEmpleadoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tablaEmpleadoMouseClicked
    {//GEN-HEADEREND:event_tablaEmpleadoMouseClicked
        int filaSeleccionada = tablaEmpleado.getSelectedRow();

        if (filaSeleccionada != -1)
        {
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleado.getModel();

            String nombre = (String) modeloTabla.getValueAt(filaSeleccionada, 1);
            String apellido = (String) modeloTabla.getValueAt(filaSeleccionada, 2);
            String correo = (String) modeloTabla.getValueAt(filaSeleccionada, 3);
            String sueldoTexto = modeloTabla.getValueAt(filaSeleccionada, 4).toString();

            sueldoTexto = sueldoTexto.replace("$", "").trim();

            nombreJT.setText(nombre);
            apellidoJT.setText(apellido);
            correoJT.setText(correo);
            sueldoJT.setText(sueldoTexto);
        }
    }//GEN-LAST:event_tablaEmpleadoMouseClicked

    private void buscarMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_buscarMouseClicked
    {//GEN-HEADEREND:event_buscarMouseClicked

    }//GEN-LAST:event_buscarMouseClicked

    private void buscarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buscarActionPerformed
    {//GEN-HEADEREND:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabel6MouseClicked
    {//GEN-HEADEREND:event_jLabel6MouseClicked
        int filaSeleccionada = tablaEmpleado.getSelectedRow();

        if (filaSeleccionada < 0 || filaSeleccionada >= tablaEmpleado.getRowCount())
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un Empleado válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de que desea eliminar el empleado seleccionado?",
                "Confirmación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (confirmacion == JOptionPane.YES_OPTION)
        {
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleado.getModel();
            Object valorCelda = tablaEmpleado.getValueAt(filaSeleccionada, 0);

            long idEmpleado;
            try
            {
                idEmpleado = Long.parseLong(valorCelda.toString());
            } catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Error al obtener el ID del empleado.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            EmpleadoDAO empleadoDAO = new EmpleadoDAO();
            empleadoDAO.eliminarEmpleado(idEmpleado);

            llenarTablaEmpleados();
            JOptionPane.showMessageDialog(this, "Empleado eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void altaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_altaActionPerformed
    {//GEN-HEADEREND:event_altaActionPerformed
        String nombre = nombreJT.getText().trim();
        String apellido = apellidoJT.getText().trim();
        String correo = correoJT.getText().trim();
        String contrasena = new String(contrasenaJT.getPassword()).trim();
        String textoSueldo = sueldoJT.getText().trim();

        if (nombre.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "El nombre no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (apellido.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "El apellido no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (correo.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "El correo no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!correo.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"))
        {
            JOptionPane.showMessageDialog(this, "Correo electrónico inválido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (contrasena.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "La contraseña no puede estar vacía.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double sueldo = 0.0;
        if (!textoSueldo.isEmpty())
        {
            try
            {
                sueldo = Double.parseDouble(textoSueldo);
            } catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "El sueldo debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        Empleado nuevoEmpleado = new Empleado(0, nombre, apellido, correo, contrasena, sueldo);

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        boolean exito = empleadoDAO.insertarEmpleado(nuevoEmpleado);

        if (exito)
        {
            JOptionPane.showMessageDialog(this, "Empleado registrado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos();
            llenarTablaEmpleados();
        } else
        {
            JOptionPane.showMessageDialog(this, "Error al registrar el empleado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_altaActionPerformed

    private void modifcarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modifcarActionPerformed
    {//GEN-HEADEREND:event_modifcarActionPerformed
        int filaSeleccionada = tablaEmpleado.getSelectedRow();

        if (filaSeleccionada == -1)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un empleado para actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nombre = nombreJT.getText().trim();
        String apellido = apellidoJT.getText().trim();
        String correo = correoJT.getText().trim();
        String contra = contrasenaJT.getText().trim();
        String textoSueldo = sueldoJT.getText().trim();

        if (nombre.isEmpty() || apellido.isEmpty() || correo.isEmpty() || contra.isEmpty() || textoSueldo.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!correo.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$"))
        {
            JOptionPane.showMessageDialog(this, "Correo electrónico no válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double sueldo;
        try
        {
            sueldo = Double.parseDouble(textoSueldo);
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Sueldo inválido. Debe ser un número.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel modelo = (DefaultTableModel) tablaEmpleado.getModel();
        int idEmpleado;

        try
        {
            idEmpleado = Integer.parseInt(modelo.getValueAt(filaSeleccionada, 0).toString());
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Error al obtener el ID del empleado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Empleado empleado = new Empleado(idEmpleado, nombre, apellido, correo, contra, sueldo);

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();
        boolean exito = empleadoDAO.actualizarEmpleado(empleado);

        if (exito)
        {
            JOptionPane.showMessageDialog(this, "Empleado actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos();
            llenarTablaEmpleados();
        } else
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar el empleado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modifcarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_limpiarActionPerformed
    {//GEN-HEADEREND:event_limpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_limpiarActionPerformed

    private void correoJTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_correoJTActionPerformed
    {//GEN-HEADEREND:event_correoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_correoJTActionPerformed

    private void apellidoJTActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_apellidoJTActionPerformed
    {//GEN-HEADEREND:event_apellidoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoJTActionPerformed

    private void mostrarCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mostrarCheckBoxActionPerformed
    {//GEN-HEADEREND:event_mostrarCheckBoxActionPerformed
        if (mostrarCheckBox.isSelected())
        {
            contrasenaJT.setEchoChar((char) 0);
        } else
        {
            contrasenaJT.setEchoChar('•');
        }
    }//GEN-LAST:event_mostrarCheckBoxActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        llenarTablaEmpleados();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabel6MouseEntered
    {//GEN-HEADEREND:event_jLabel6MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        ExportarCSV exportarCSV = new ExportarCSV();

        String query = "SELECT * FROM empleado";

        String ruta = System.getProperty("user.home") + "/Downloads/empleados_export.csv";

        boolean exito = false;
        try
        {
            exito = exportarCSV.exportarACSV(query, ruta);
        } catch (IOException ex)
        {
            Logger.getLogger(VtnEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (exito)
        {
            JOptionPane.showMessageDialog(null, "✅ Exportación completada: " + ruta, "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else
        {
            JOptionPane.showMessageDialog(null, "Error al exportar los datos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void limpiarCampos()
    {
        CtrlInterfaz.limpia(nombreJT, apellidoJT, correoJT, contrasenaJT, sueldoJT);
    }

    private void llenarTablaEmpleados()
    {
        DefaultTableModel modelo = (DefaultTableModel) tablaEmpleado.getModel();
        modelo.setRowCount(0);

        List<Empleado> empleados = EmpleadoDAO.listarEmpleados();

        for (Empleado empleado : empleados)
        {
            Object[] fila =
            {
                empleado.getId_empleado(),
                empleado.getNombre(),
                empleado.getApellido(),
                empleado.getCorreo(),
                String.format("$%.2f", empleado.getSueldo())
            };
            modelo.addRow(fila);
        }
    }

    public void filtrarEmpleados()
    {
        String textoBusqueda = buscar.getText().trim().toLowerCase();
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaEmpleado.getModel();

        modeloTabla.setRowCount(0);

        EmpleadoDAO empleadoDAO = new EmpleadoDAO();

        List<Empleado> empleados = empleadoDAO.obtenerTodosLosEmpleados();

        for (Empleado empleado : empleados)
        {
            if (empleado.getNombre().toLowerCase().contains(textoBusqueda))
            {
                Object[] fila =
                {
                    empleado.getId_empleado(),
                    empleado.getNombre(),
                    empleado.getApellido(),
                    empleado.getCorreo(),
                    String.format("$%.2f", empleado.getSueldo())
                };
                modeloTabla.addRow(fila);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alta;
    private javax.swing.JTextField apellidoJT;
    private javax.swing.JTextField buscar;
    private javax.swing.JPasswordField contrasenaJT;
    private javax.swing.JTextField correoJT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton modifcar;
    private javax.swing.JCheckBox mostrarCheckBox;
    private javax.swing.JTextField nombreJT;
    private javax.swing.JTextField sueldoJT;
    private javax.swing.JTable tablaEmpleado;
    // End of variables declaration//GEN-END:variables

}
