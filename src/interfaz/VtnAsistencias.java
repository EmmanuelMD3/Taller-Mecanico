/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaz;

import dao.AsistenciaDAO;
import dao.ExportarCSV;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.List;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.LocalTime;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chemo
 */
public class VtnAsistencias extends javax.swing.JInternalFrame
{

    /**
     * Creates new form VtnAsistencias
     */
    public VtnAsistencias()
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAsistencias = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setPreferredSize(new java.awt.Dimension(1150, 520));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setBackground(new java.awt.Color(51, 153, 255));
        jButton4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("EXPORTAR DATOS");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, -1));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel1.setText("ASISTENCIA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, 30));

        tablaAsistencias.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tablaAsistencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "EMPLEADO", "ENTRADA", "ESTADO"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaAsistencias);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 64, 1148, 430));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        llenarTablaAsistencias();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        ExportarCSV exportarCSV = new ExportarCSV();

        String query = "SELECT * FROM Asistencia"; 

        String ruta = System.getProperty("user.home") + "/Downloads/asistencias_export.csv"; 
        boolean exito = exportarCSV.exportarAsistenciasACSV(query, ruta);

        if (exito)
        {
            JOptionPane.showMessageDialog(null, "✅ Exportación completada: " + ruta, "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else
        {
            JOptionPane.showMessageDialog(null, "Error al exportar las asistencias.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void llenarTablaAsistencias()
    {
        DefaultTableModel modelo = (DefaultTableModel) tablaAsistencias.getModel();
        modelo.setRowCount(0);
        AsistenciaDAO asistenciaDAO = new AsistenciaDAO();
        List<Object[]> asistencias = asistenciaDAO.listarAsistenciasConNombre();

        SimpleDateFormat formato = new SimpleDateFormat("HH:mm dd/MM/yyyy");

        for (Object[] fila : asistencias)
        {
            int id = (int) fila[0];
            String nombreEmpleado = (String) fila[1];
            Timestamp entrada = (Timestamp) fila[2];

            LocalTime horaEntrada = entrada.toLocalDateTime().toLocalTime();
            LocalTime limite = LocalTime.of(8, 0);
            String estado = horaEntrada.isAfter(limite) ? "Tarde" : "Temprano";

            modelo.addRow(new Object[]
            {
                id,
                nombreEmpleado,
                formato.format(entrada),
                estado
            });
        }

        aplicarColoresEstado();
    }

    private void aplicarColoresEstado()
    {
        tablaAsistencias.getColumnModel().getColumn(3).setCellRenderer(new DefaultTableCellRenderer()
        {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column)
            {

                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                if ("Temprano".equals(value))
                {
                    c.setForeground(new Color(0, 128, 0));
                } else if ("Tarde".equals(value))
                {
                    c.setForeground(Color.RED);
                } else
                {
                    c.setForeground(Color.BLACK);
                }

                return c;
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAsistencias;
    // End of variables declaration//GEN-END:variables
}
